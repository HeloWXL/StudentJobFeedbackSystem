<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qztc.demo.mapper.WorkMapper" >
  <resultMap id="BaseResultMap" type="com.qztc.demo.model.Work" >
    <id column="work_id" property="workId" jdbcType="INTEGER" />
    <result column="work_name" property="workName" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="word_url" property="wordUrl" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    work_id, work_name, course_id, student_id, word_url, teacher_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from work
    where work_id = #{workId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from work
    where work_id = #{workId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qztc.demo.model.Work" >
    insert into work (work_id, work_name, course_id, 
      student_id, word_url, teacher_id
      )
    values (#{workId,jdbcType=INTEGER}, #{workName,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER}, 
      #{studentId,jdbcType=INTEGER}, #{wordUrl,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qztc.demo.model.Work" >
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="workId != null" >
        work_id,
      </if>
      <if test="workName != null" >
        work_name,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="wordUrl != null" >
        word_url,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="workId != null" >
        #{workId,jdbcType=INTEGER},
      </if>
      <if test="workName != null" >
        #{workName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="wordUrl != null" >
        #{wordUrl,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qztc.demo.model.Work" >
    update work
    <set >
      <if test="workName != null" >
        work_name = #{workName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="wordUrl != null" >
        word_url = #{wordUrl,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where work_id = #{workId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qztc.demo.model.Work" >
    update work
    set work_name = #{workName,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      word_url = #{wordUrl,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER}
    where work_id = #{workId,jdbcType=INTEGER}
  </update>
</mapper>